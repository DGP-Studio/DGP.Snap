<Application x:Class="DGP.Snap.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="Application_Startup"
             ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.steel.xaml" />-->

                <ResourceDictionary
                    xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">

                    <!--  WindowButtonCommands control templates  -->

                    <ControlTemplate x:Key="WindowButtonCommandsTemplate" TargetType="{x:Type mah:WindowButtonCommands}">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="PART_Min" 
                                    Focusable="False"
                                    Content="&#xE921;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                                    IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                                    ToolTip="{Binding Minimize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
                                                <Binding Mode="OneWay"
                                                    Path="ShowMinButton"
                                                    RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                                <Binding Mode="OneWay"
                                                    Path="UseNoneWindowStyle"
                                                    RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                                <Binding Mode="OneWay"
                                                    Path="ResizeMode"
                                                    RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                
                                <!--<Path Data="F1M0,6L0,9 9,9 9,6 0,6z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      SnapsToDevicePixels="True" />-->
                            </Button>
                            <Button x:Name="PART_Max"
                                    Content="&#xE922;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                    Focusable="False"
                    IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                    ToolTip="{Binding Maximize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
                                        <Binding Mode="OneWay"
                                 Path="ShowMaxRestoreButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="ResizeMode"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                    </MultiBinding>
                                </Button.Visibility>
                                <!--  normal state  -->
                                <!--<Path x:Name="PART_MaxPath"
                      Width="10"
                      Height="10"
                      Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      SnapsToDevicePixels="True" />-->
                            </Button>
                            <Button x:Name="PART_Close"
                                    Content="&#xE8BB;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                    Focusable="False"
                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled, Mode=OneWay}"
                    RenderOptions.EdgeMode="Aliased"
                    ToolTip="{Binding Close, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
                                        <Binding Mode="OneWay"
                                 Path="ShowCloseButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                    </MultiBinding>
                                </Button.Visibility>
                                <!--<Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      SnapsToDevicePixels="True" />-->
                            </Button>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsAnyDialogOpen}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabledWithDialog}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_Close" Property="IsEnabled" Value="False" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=WindowState}" Value="Maximized">
                                <Setter TargetName="PART_Max" Property="ToolTip" Value="{Binding Restore, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <Setter TargetName="PART_Max" Property="Content" Value="&#xE923;" />
                                <!--<Setter TargetName="PART_MaxPath" Property="Data" Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />-->
                            </DataTrigger>
                            <Trigger Property="Theme" Value="Light">
                                <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightCloseButtonStyle}"/>
                                <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMaxButtonStyle}" />
                                <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMinButtonStyle}" />
                            </Trigger>
                            <Trigger Property="Theme" Value="Dark">
                                <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkCloseButtonStyle}" />
                                <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMaxButtonStyle}" />
                                <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMinButtonStyle}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
<!--hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh-->
                    <ControlTemplate x:Key="MahApps.Metro.Templates.WindowButtonCommands.Win10" TargetType="{x:Type mah:WindowButtonCommands}">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="PART_Min"
                                    Content="&#xE921;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                    ToolTip="{Binding Minimize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    UseLayoutRounding="True">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
                                        <Binding Mode="OneWay"
                                 Path="ShowMinButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="ResizeMode"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                    </MultiBinding>
                                </Button.Visibility>
                                <!--<Path Width="10"
                      Height="10"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,40 L96,40 96,48 0,48 0,40z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      RenderOptions.EdgeMode="Aliased"
                      SnapsToDevicePixels="True"
                      Stretch="Uniform" />-->
                            </Button>
                            <Button x:Name="PART_Max"
                                    Content="&#xE922;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                    ToolTip="{Binding Maximize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    UseLayoutRounding="True">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
                                        <Binding Mode="OneWay"
                                 Path="ShowMaxRestoreButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="ResizeMode"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                    </MultiBinding>
                                </Button.Visibility>
                                <!--  normal state  -->
                                <!--<Path x:Name="PART_MaxPath"
                      Width="10"
                      Height="10"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M6,6L6,90 90,90 90,6 6,6z M0,0L96,0 96,96 0,96 0,0z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      RenderOptions.EdgeMode="Aliased"
                      SnapsToDevicePixels="True"
                      Stretch="Uniform" />-->
                            </Button>
                            <Button x:Name="PART_Close"
                                    Content="&#xE8BB;" 
                                    FontSize="10" FontFamily="Segoe MDL2 Assets"
                    Width="46"
                    Focusable="False"
                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled, Mode=OneWay}"
                    ToolTip="{Binding Close, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    UseLayoutRounding="True">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
                                        <Binding Mode="OneWay"
                                 Path="ShowCloseButton"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                        <Binding Mode="OneWay"
                                 Path="UseNoneWindowStyle"
                                 RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                                    </MultiBinding>
                                </Button.Visibility>
                                <!--<Grid>
                                    <Line HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          X1="0"
                          X2="10"
                          Y1="0"
                          Y2="10" />
                                    <Line HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          X1="0"
                          X2="10"
                          Y1="10"
                          Y2="0" />
                                </Grid>-->
                            </Button>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabledWithDialog}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_Close" Property="IsEnabled" Value="False" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=WindowState}" Value="Maximized">
                                <Setter TargetName="PART_Max" Property="ToolTip" Value="{Binding Restore, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <Setter TargetName="PART_Max" Property="Content" Value="&#xE923;" />
                                <!--<Setter TargetName="PART_MaxPath" Property="Data" Value="M10,9 9,9 9,3 3,3 3,2 10,2 10,9Z M8,11 1,11 1,4 8,4 8,11Z M2,1 2,3 0,3 0,12 9,12 9,10 11,10 11,1 2,1Z" />-->
                            </DataTrigger>
                            <Trigger Property="Theme" Value="Light">
                                <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightCloseButtonStyle}" />
                                <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMaxButtonStyle}" />
                                <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMinButtonStyle}" />
                            </Trigger>
                            <Trigger Property="Theme" Value="Dark">
                                <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkCloseButtonStyle}" />
                                <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMaxButtonStyle}" />
                                <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMinButtonStyle}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="MahApps.Metro.Styles.WindowButtonCommands" TargetType="{x:Type mah:WindowButtonCommands}">
                        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
                        <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource DarkMetroWindowButtonStyle}" />
                        <Setter Property="DarkMaxButtonStyle" Value="{DynamicResource DarkMetroWindowButtonStyle}" />
                        <Setter Property="DarkMinButtonStyle" Value="{DynamicResource DarkMetroWindowButtonStyle}" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="LightCloseButtonStyle" Value="{DynamicResource LightMetroWindowButtonStyle}" />
                        <Setter Property="LightMaxButtonStyle" Value="{DynamicResource LightMetroWindowButtonStyle}" />
                        <Setter Property="LightMinButtonStyle" Value="{DynamicResource LightMetroWindowButtonStyle}" />
                        <Setter Property="Template" Value="{StaticResource WindowButtonCommandsTemplate}" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MahApps.Metro.Styles.WindowButtonCommands.Win10"
           BasedOn="{StaticResource MahApps.Metro.Styles.WindowButtonCommands}"
           TargetType="{x:Type mah:WindowButtonCommands}">
                        <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource MahApps.Metro.Styles.WindowButton.Close.Dark.Win10}" />
                        <Setter Property="LightCloseButtonStyle" Value="{DynamicResource MahApps.Metro.Styles.WindowButton.Close.Light.Win10}" />
                        <Setter Property="Template" Value="{StaticResource MahApps.Metro.Templates.WindowButtonCommands.Win10}" />
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
                
            
            
            <!--文本-->
            <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Microsoft YaHei UI Light" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="LineStackingStrategy" Value="MaxHeight" />
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="46" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="SubheaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="34" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="FontSize" Value="24" />
            </Style>
            <Style x:Key="SubtitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            <Style x:Key="BodyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="15" />
            </Style>
            <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <!--按钮-->
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>

            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#66808080"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#66808080"/>

            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#CC808080"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="Gray"/>

            <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#CCFFFFFF"/>
            
            <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                                <ContentPresenter 
                                    x:Name="contentPresenter" 
                                    Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <!--当按钮为默认按钮时-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                        x:Name="border" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="true">
                                <ContentPresenter 
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StandardMenuItemStyle" x:Name="StandardMenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Height" Value="32"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource MenuItemBackgroundBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>

                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,5,8,6"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,5,8,6"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,6"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,6"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="MenuIconTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            </Style>

            <!--<Style TargetType="ContextMenu">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>-->
            
        </ResourceDictionary>

        
    </Application.Resources>
</Application>
